# Generated by Django 2.2.24 on 2021-10-04 19:39

import core.utils
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0058_auto_20211001_1643'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalHelpRequest_2',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(db_index=True, help_text='Producto que queres vender', max_length=200, verbose_name='Producto')),
                ('message', models.CharField(db_index=True, max_length=200, null=True, verbose_name='detalleparabusqueda')),
                ('name', models.CharField(max_length=200, verbose_name='Detalle')),
                ('name2', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nombre completo')),
                ('phone', models.CharField(max_length=30, verbose_name='Telephone contact')),
                ('address', models.CharField(help_text='Your address, city, neighborhood, references, or how to get there, to get help', max_length=400, null=True, verbose_name='Address')),
                ('location', django.contrib.gis.db.models.fields.PointField(help_text='<p style="margin-bottom:5px;font-size:10px;">Select your location so that people can find you, if you do not want to mark your home a good option may be the nearest police station or some other nearby public place.<br>If you have problems with this step <a href="#" class="is-link modal-button" data-target="#myModal" aria-haspopup="true">Check out this help</a></p><p id="div_direccion" style="font-size: 10px; margin-bottom: 5px;"></p>', srid=4326, verbose_name='Location')),
                ('picture', models.TextField(blank=True, help_text='In case you want you can attach a photo related to your request. It is optional but it can help people better understand your situation.', max_length=100, null=True, verbose_name='Photo')),
                ('resolved', models.BooleanField(db_index=True, default=False)),
                ('active', models.BooleanField(db_index=True, default=True)),
                ('added', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='Added')),
                ('upvotes', models.IntegerField(blank=True, default=0)),
                ('downvotes', models.IntegerField(blank=True, default=0)),
                ('city', models.CharField(blank=True, default='', editable=False, max_length=50)),
                ('city_code', models.CharField(blank=True, default='', editable=False, max_length=50)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField()),
                ('cant_disponible', models.IntegerField(blank=True, null=True, verbose_name='Cantidad Disponible')),
                ('cantidad_disponible', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cantidad Disponible')),
                ('ano_dis', models.IntegerField(blank=True, null=True, verbose_name='Año')),
                ('unidad_medida', models.CharField(blank=True, choices=[('KILOGRAMOS', 'KILOGRAMOS'), ('LITROS', 'LITROS'), ('UNIDAD', 'UNIDAD'), ('DOCENA', 'DOCENA')], max_length=20, null=True, verbose_name='Unidad de medida de la cantidad disponible')),
                ('mes_dis', models.IntegerField(blank=True, choices=[('1', 'Enero'), ('2', 'Febrero'), ('3', 'Marzo'), ('4', 'Abril'), ('5', 'Mayo'), ('6', 'Junio'), ('7', 'Julio'), ('8', 'Agosto'), ('9', 'Septiembre'), ('10', 'Octubre'), ('11', 'Noviembre'), ('12', 'Diciembre')], null=True, verbose_name='Mes')),
                ('dia_dis', models.IntegerField(blank=True, null=True, verbose_name='Dia')),
                ('fecha', models.DateField(blank=True, null=True, verbose_name='Fecha de disponibilidad')),
                ('precio', models.CharField(blank=True, default='', help_text='Precio por unidad de medida.', max_length=100, null=True, verbose_name='Precio')),
                ('delivery', models.BooleanField(blank=True, default=True, null=True, verbose_name='Delivery disponible para entrega de producto')),
                ('buscar', models.BooleanField(blank=True, default=True, null=True, verbose_name='Debe venir a buscar')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical help request_2',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HelpRequest_2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, help_text='Producto que queres vender', max_length=200, verbose_name='Producto')),
                ('message', models.CharField(db_index=True, max_length=200, null=True, verbose_name='detalleparabusqueda')),
                ('name', models.CharField(max_length=200, verbose_name='Detalle')),
                ('name2', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nombre completo')),
                ('phone', models.CharField(max_length=30, verbose_name='Telephone contact')),
                ('address', models.CharField(help_text='Your address, city, neighborhood, references, or how to get there, to get help', max_length=400, null=True, verbose_name='Address')),
                ('location', django.contrib.gis.db.models.fields.PointField(help_text='<p style="margin-bottom:5px;font-size:10px;">Select your location so that people can find you, if you do not want to mark your home a good option may be the nearest police station or some other nearby public place.<br>If you have problems with this step <a href="#" class="is-link modal-button" data-target="#myModal" aria-haspopup="true">Check out this help</a></p><p id="div_direccion" style="font-size: 10px; margin-bottom: 5px;"></p>', srid=4326, verbose_name='Location')),
                ('picture', models.ImageField(blank=True, help_text='In case you want you can attach a photo related to your request. It is optional but it can help people better understand your situation.', null=True, upload_to=core.utils.rename_img, verbose_name='Photo')),
                ('resolved', models.BooleanField(db_index=True, default=False)),
                ('active', models.BooleanField(db_index=True, default=True)),
                ('added', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='Added')),
                ('upvotes', models.IntegerField(blank=True, default=0)),
                ('downvotes', models.IntegerField(blank=True, default=0)),
                ('city', models.CharField(blank=True, default='', editable=False, max_length=50)),
                ('city_code', models.CharField(blank=True, default='', editable=False, max_length=50)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField()),
                ('cant_disponible', models.IntegerField(blank=True, null=True, verbose_name='Cantidad Disponible')),
                ('cantidad_disponible', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cantidad Disponible')),
                ('ano_dis', models.IntegerField(blank=True, null=True, verbose_name='Año')),
                ('unidad_medida', models.CharField(blank=True, choices=[('KILOGRAMOS', 'KILOGRAMOS'), ('LITROS', 'LITROS'), ('UNIDAD', 'UNIDAD'), ('DOCENA', 'DOCENA')], max_length=20, null=True, verbose_name='Unidad de medida de la cantidad disponible')),
                ('mes_dis', models.IntegerField(blank=True, choices=[('1', 'Enero'), ('2', 'Febrero'), ('3', 'Marzo'), ('4', 'Abril'), ('5', 'Mayo'), ('6', 'Junio'), ('7', 'Julio'), ('8', 'Agosto'), ('9', 'Septiembre'), ('10', 'Octubre'), ('11', 'Noviembre'), ('12', 'Diciembre')], null=True, verbose_name='Mes')),
                ('dia_dis', models.IntegerField(blank=True, null=True, verbose_name='Dia')),
                ('fecha', models.DateField(blank=True, null=True, verbose_name='Fecha de disponibilidad')),
                ('precio', models.CharField(blank=True, default='', help_text='Precio por unidad de medida.', max_length=100, null=True, verbose_name='Precio')),
                ('delivery', models.BooleanField(blank=True, default=True, null=True, verbose_name='Delivery disponible para entrega de producto')),
                ('buscar', models.BooleanField(blank=True, default=True, null=True, verbose_name='Debe venir a buscar')),
                ('categories', models.ManyToManyField(blank=True, to='core.Category')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
